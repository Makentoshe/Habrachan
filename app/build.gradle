apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.makentoshe.habrachan"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        Properties properties = new Properties()
        def token = ""
        def password = ""
        def email = ""
        if (project.rootProject.file('local.properties').canRead()) {
            properties.load(project.rootProject.file("local.properties").newDataInputStream())
            token = properties.getProperty('api.token')
            password = properties.getProperty('login.password')
            email = properties.getProperty('login.email')
        }
        buildConfigField "String", "CLIENT_KEY", "\"85cab69095196f3.89453480\""
        buildConfigField "String", "API_KEY", "\"173984950848a2d27c0cc1c76ccf3d6d3dc8255b\""
        buildConfigField "String", "TOKEN_KEY", "\"$token\""
        buildConfigField "String", "LOGIN", "\"$email\""
        buildConfigField "String", "PASSWORD", "\"$password\""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    lintOptions {
        lintConfig file("lint.xml")
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // OkHttp
    // https://github.com/square/okhttp/
    def okhttp = "4.1.0"
    implementation "com.squareup.okhttp3:okhttp:$okhttp"

    // Retrofit
    // https://github.com/square/retrofit
    def retrofit = "2.3.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit"
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.1'

    // Toothpick
    // https://github.com/stephanenicolas/toothpick
    def toothpick = "3.1.0"
    implementation "com.github.stephanenicolas.toothpick:ktp:$toothpick"
    kapt "com.github.stephanenicolas.toothpick:toothpick-compiler:$toothpick"
    implementation "com.github.stephanenicolas.toothpick:smoothie:$toothpick"
    implementation "com.github.stephanenicolas.toothpick:smoothie-lifecycle-ktp:$toothpick"
    testImplementation "com.github.stephanenicolas.toothpick:toothpick-testing-junit5:$toothpick"

    // Cicerone
    // https://github.com/terrakok/Cicerone
    def cicerone = "5.1.1"
    implementation "ru.terrakok.cicerone:cicerone:$cicerone"

    // Material components
    // https://github.com/material-components/material-components-android
    def material = "1.3.0-alpha01"
    implementation "com.google.android.material:material:$material"

    // Architecture components
    // https://developer.android.com/topic/libraries/architecture
    def arch = "1.1.1"
    implementation "android.arch.lifecycle:extensions:$arch"
    implementation "android.arch.lifecycle:viewmodel:$arch"

    // RxJava2
    // https://github.com/ReactiveX/RxJava
    def rxjava2 = "3.0.0-RC3"
    implementation "io.reactivex.rxjava3:rxjava:$rxjava2"

    // RxAndroid
    // https://github.com/ReactiveX/RxAndroid
    def rxandroid = "2.1.1"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid"

    // SlidingUpPanelLayout
    // https://github.com/umano/AndroidSlidingUpPanel
    def slidinguppanel = "3.4.0"
    implementation "com.sothree.slidinguppanel:library:$slidinguppanel"

    // Xml parsing
    // https://github.com/jhy/jsoup
    def jsoup = "1.11.3"
    implementation "org.jsoup:jsoup:$jsoup"

    // Room
    def room = "1.1.1"
    implementation "android.arch.persistence.room:runtime:$room"
    kapt "android.arch.persistence.room:compiler:$room"

    // Epoxy
    // https://github.com/airbnb/epoxy
    def epoxy = "3.8.0"
    implementation "com.airbnb.android:epoxy:$epoxy"
    kapt "com.airbnb.android:epoxy-processor:$epoxy"
    implementation "com.airbnb.android:epoxy-paging:$epoxy"

    // Pagination library
    // https://developer.android.com/topic/libraries/architecture/paging
    def pagination = "2.1.2"
    implementation "androidx.paging:paging-runtime-ktx:$pagination"
    implementation "androidx.paging:paging-rxjava2:$pagination"

    // Subsampling scale image view
    // https://github.com/davemorrissey/subsampling-scale-image-view
    implementation 'com.davemorrissey.labs:subsampling-scale-image-view:3.10.0'

    def gif = "1.2.19"
    implementation "pl.droidsonroids.gif:android-gif-drawable:$gif"

    // Multiline Collapsing Toolbar
    // https://github.com/opacapp/multiline-collapsingtoolbar
    def collapsing = "27.1.1"
    implementation "net.opacapp:multiline-collapsingtoolbar:$collapsing"

    // Markwon
    // https://github.com/noties/Markwon
    def markwon = "4.3.1"
    implementation "io.noties.markwon:core:$markwon"
    implementation "io.noties.markwon:html:$markwon"
    implementation "io.noties.markwon:image:$markwon"
    implementation "io.noties.markwon:ext-tables:$markwon"

    def core = "1.2.0"
    implementation "androidx.core:core-ktx:$core"

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'

    def testCore = "1.2.0"
    androidTestImplementation "androidx.test:core:$testCore"
    androidTestImplementation "androidx.test:core-ktx:$testCore"

    def extJUnit = "1.1.1"
    androidTestImplementation "androidx.test.ext:junit:$extJUnit"
    androidTestImplementation "androidx.test.ext:junit-ktx:$extJUnit"

    def testRunner = "1.1.0"
    androidTestImplementation "androidx.test:runner:$testRunner"

    def testRules = "1.2.0"
    androidTestImplementation "androidx.test:rules:$testRules"

    def espressoCore = "3.2.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoCore"

    def testFragment = "1.3.0-alpha03"
    implementation "androidx.fragment:fragment:$testFragment"
    debugImplementation "androidx.fragment:fragment-testing:$testFragment"

    // Robolectric
    // http://robolectric.org
    def robolectric = "4.3.1"
    testImplementation "org.robolectric:robolectric:$robolectric"

    // Mockk
    // https://github.com/mockk/mockk
    def mockk = "1.9.1"
    testImplementation "io.mockk:mockk:$mockk"
    androidTestImplementation "io.mockk:mockk-android:$mockk"

}

kapt {
    correctErrorTypes = true
}
